#version 400 core


//Input variables coming from the StaticShader class
in vec3 position;
in vec2 textureCoords;
in vec3 normal;

out vec2 pass_textureCoords;
out vec3 surfaceNormal;
out vec3 toLightVector;
out vec3 toCameraVector;

uniform mat4 tranformationMatrix;
uniform mat4 projectionMatrix;
uniform mat4 viewMatrix;
uniform vec3 lightPosition;

void main(){
	//calculations helping with finding the relative position of the object in relation to light sources
	vec4 worldPostion = tranformationMatrix * vec4(position, 1.0);
	gl_Position = projectionMatrix * viewMatrix  * worldPostion;
	pass_textureCoords = textureCoords * 40.0;

	surfaceNormal = (tranformationMatrix * vec4(normal, 0.0)).xyz;
	toLightVector = lightPosition - worldPostion.xyz;
	toCameraVector = (inverse(viewMatrix) * vec4(0.0, 0.0, 0.0, 1.0)).xyz - worldPostion.xyz;	
}